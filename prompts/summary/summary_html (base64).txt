You are tasked with generating a *lecture summary* in **HTML/CSS/JS with latex rendering**, designed for readability and professional formatting (like a modern textbook).
Use the provided **lecture slides** and **audio transcript** to synthesize and organize the content.

Follow these formatting and stylistic rules carefully.

---

#### 🧩 **STRUCTURE AND STYLE REQUIREMENTS**

1. **Output Format:**
   Produce *complete HTML/CSS/JS with latex rendering source code in one codeblock combined* that can be directly pasted into Overleaf.

2. **Preamble Assumption:**
   The following box environments are already defined in the preamble (don’t redefine them).
   You can use:

   * `KeyIdeaBox`
   * `DefinitionBox`
   * `TipBox`
   * `ExampleBox`
   * `NoteBox`
   * `CautionBox`
     (They already use distinct colors, icons, and shadow styling.)

3. **Document Structure:**

   * Start with a **main title** (e.g., `section like {Lecture Summary: [Lecture Title]}`).
   * Then a **“Note: At a Glance”** section summarizing all major topics in bullet points (Using the Note box).
   * After that, divide the summary into **subtopics** with `subsection like {Subtopic Title}`.
   * For each subtopic:

     * Use normal text to introduce/explain the concept. Tables may be added ONLY where it is appropriate.
     * Insert boxes *only when useful* (e.g., for key ideas, definitions, examples, or pitfalls).
     * Do **not** overuse boxes — every box must have surrounding explanatory text.
     * Keep explanations short and clear, like high-quality textbook summaries.
   * Optionally end with a short `subsection like {Summary Recap}` of key points (plain text or one box).

4. **Content Style Guidelines:**

   * Use concise, student-friendly language.
   * Prefer bullet points for lists or step sequences.
   * Avoid dense text paragraphs.
   * When introducing formulas, use inline or display math mode properly.
   * Maintain conceptual flow: *theory → definition → example → remark/tip → caution (if needed)*.

---

#### 🪶 **CONTENT FOCUS**

Use both lecture slides and transcript to cover:

* All core concepts and their relationships.
* Important definitions or formulas (inside `DefinitionBox`).
* Core intuitions or frameworks (inside `KeyIdeaBox`).
* Practical strategies or shortcuts (inside `TipBox`).
* One or two illustrative cases or derivations (inside `ExampleBox`).
* Additional insights or warnings (inside `NoteBox` or `CautionBox`).

---

#### 🧾 **OUTPUT FORMAT TEMPLATE**

Your generated output must follow this pattern for boxes:

```
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />

  <!-- Font Awesome 5 (icons to match your LaTeX fontawesome5) -->
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css">

  <!-- MathJax v3 (renders LaTeX in the page) -->
  <script>
    window.MathJax = {
      tex: {
        inlineMath: [['\\(','\\)'], ['$', '$']],
        displayMath: [['\\[','\\]'], ['$$','$$']]
      },
      svg: { fontCache: 'global' }
    };
  </script>
  <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js"></script>

  <style>
    /* ===== Color palette (matches your LaTeX definitions) ===== */
    :root{
      --box-blue-frame:#0D47A1;  --box-blue-back:#E3F2FD;
      --box-teal-frame:#00695C;  --box-teal-back:#E0F2F1;
      --box-green-frame:#1B5E20; --box-green-back:#E8F5E9;
      --box-orange-frame:#E65100;--box-orange-back:#FFF3E0;
      --box-purple-frame:#4A148C;--box-purple-back:#F3E5F5;
      --box-red-frame:#B71C1C;   --box-red-back:#FFEBEE;
      --box-shadow:#B0BEC5;
    }

    /* ===== Global box metrics ("box/standard") ===== */
    .tbox{
      --tbox-frame: var(--box-blue-frame);
      --tbox-back:  var(--box-blue-back);

      position: relative;
      color:#000;
      background: var(--tbox-back);
      border: 1px solid var(--tbox-frame);
      border-radius: 4px;
      padding: 8px 8px 8px 8px;
      padding-top: 20px;                 /* headroom for the title pill */
      margin-block: 12px;
      box-shadow:
        0 -2px 4px rgba(176,190,197,0.45),
        0 1px 2px rgba(0,0,0,0.04);
      break-inside: auto;
      font: 400 1rem/1.45 system-ui,-apple-system,"Segoe UI",Roboto,Helvetica,Arial,"Apple Color Emoji","Segoe UI Emoji";
    }
    .tbox::before{
      content:"";
      position:absolute;
      left:-1px; top:-1px; bottom:-1px;
      width:4px;
      background: var(--tbox-frame);
      border-top-left-radius:4px;
      border-bottom-left-radius:4px;
    }
    .tbox-title{
      position:absolute;
      left:0; top:0;
      transform: translate(12px, -50%);
      background: var(--tbox-frame);
      color:#fff;
      padding: 4px 8px;
      border-radius: 3px;
      border: none;
      display:inline-flex; align-items:center; gap:.4em;
      font-weight:700;
      font-family: "Segoe UI",system-ui,-apple-system,Roboto,Helvetica,Arial;
      white-space: nowrap;
    }
    .tbox-title .fa, .tbox-title .far, .tbox-title .fas{ line-height: 1; }
    .tbox a{ color: inherit; text-decoration: underline; }
    .tbox code{ background: rgba(0,0,0,.06); padding:.1em .3em; border-radius:3px; }

    /* Variants */
    .tbox.key-idea   { --tbox-frame: var(--box-teal-frame);   --tbox-back: var(--box-teal-back); }
    .tbox.definition { --tbox-frame: var(--box-blue-frame);   --tbox-back: var(--box-blue-back); }
    .tbox.tip        { --tbox-frame: var(--box-green-frame);  --tbox-back: var(--box-green-back); }
    .tbox.example    { --tbox-frame: var(--box-orange-frame); --tbox-back: var(--box-orange-back); }
    .tbox.note       { --tbox-frame: var(--box-purple-frame); --tbox-back: var(--box-purple-back); }
    .tbox.caution    { --tbox-frame: var(--box-red-frame);    --tbox-back: var(--box-red-back);  }

    /* Simple header area for the LaTeX demo */
    .math-demo{
      margin: 16px 0 8px;
      font: 600 1.1rem/1.4 system-ui,-apple-system,"Segoe UI",Roboto,Helvetica,Arial;
      display:flex; align-items:center; gap:.5rem;
    }
    .math-demo .label{
      padding:.2rem .5rem;
      background:#111; color:#fff;
      border-radius: 4px;
      font-size:.9rem;
    }

    @media print{
      .tbox{ box-shadow: none; -webkit-print-color-adjust: exact; print-color-adjust: exact; }
    }
  </style>
</head>
<body>

  <!-- ===== Sample LaTeX (rendered by MathJax) ===== -->
  <div class="math-demo">
    <!-- One classic equation: quadratic formula -->
    $$x=\frac{-b \pm \sqrt{b^2-4ac}}{2a}$$
  </div>

  <!-- =================== USAGE EXAMPLES =================== -->

  <!-- KeyIdeaBox -->
  <div class="tbox key-idea">
    <div class="tbox-title"><i class="fas fa-lightbulb" aria-hidden="true"></i> Key Idea: One-line headline</div>
    <div class="tbox-body">
      Content…
    </div>
  </div>

  <!-- DefinitionBox -->
  <div class="tbox definition">
    <div class="tbox-title"><i class="fas fa-book" aria-hidden="true"></i> Definition: Term</div>
    <div class="tbox-body">
      Formal definition…
    </div>
  </div>

  <!-- TipBox -->
  <div class="tbox tip">
    <div class="tbox-title"><i class="far fa-lightbulb" aria-hidden="true"></i> Tip: When to apply</div>
    <div class="tbox-body">
      Practical guidance…
    </div>
  </div>

  <!-- ExampleBox -->
  <div class="tbox example">
    <div class="tbox-title"><i class="fas fa-chalkboard-teacher" aria-hidden="true"></i> Worked Example: Scenario</div>
    <div class="tbox-body">
      Step-by-step solution…
    </div>
  </div>

  <!-- NoteBox -->
  <div class="tbox note">
    <div class="tbox-title"><i class="fas fa-sticky-note" aria-hidden="true"></i> Note: Context</div>
    <div class="tbox-body">
      Extra remarks…
    </div>
  </div>

  <!-- CautionBox -->
  <div class="tbox caution">
    <div class="tbox-title"><i class="fas fa-exclamation-triangle" aria-hidden="true"></i> Caution: Common pitfall</div>
    <div class="tbox-body">
      What to avoid…
    </div>
  </div>

</body>
</html>
```

---

#### 🧭 **ADDITIONAL INSTRUCTIONS TO MODEL**

* Keep text **short, modular, and visually balanced**.
* Do **not** insert every piece of information into boxes.
* Each section/subsection should feel natural — not box-heavy.
* When including math, ensure syntax is correct for Latex rendering.
* The final HTML/CSS/JS with latex rendering combined code should compile without conflicts.
* Do **not** include any placeholder comments (like “insert here”). Use real summarised content instead.
* Try to make sure boxes dont overflow across pages.

---

✅ **Final Task Instruction:**

> Generate a **complete HTML/CSS/JS with latex rendering lecture summary** following all the above formatting and structural rules, integrating material from both lecture slides and audio transcript.

When writing the summary, ensure there is **substantial normal text** throughout — the document should *read naturally like a concise textbook chapter*, not a patchwork of colored boxes. Boxes are meant to **highlight** or **reinforce** key ideas, not to replace the main explanation. Each box should be surrounded by explanatory sentences that provide context, transitions, or interpretation. Avoid stacking multiple boxes back-to-back or filling the page with them; instead, maintain a flowing narrative that connects the lecture’s concepts smoothly. The goal is a balanced mix of readable text and selective, meaningful boxed highlights that enhance understanding rather than overwhelm it. Make sure the normal text isn't too text heavy!

After begin document, add something like (change course name and lecture and data based on actual):

<div style="text-align:center;">
  <div style="font-size:1.728em;">IADS Lecture 7 Summary</div>
  <div style="font-size:1.2em; margin-top:2pt;">Classic Datatypes: Lists, Stacks, Queues</div>
</div>


Give complete combined ready to paste code. The response should begin with "<!DOCTYPE html>" and end with "</html>".